package pruebadb.example.dj.com.pruebadb.pruebadb.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import pruebadb.example.dj.com.pruebadb.pruebadb.db.Usuario;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.Tarea;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.RelacionUsuarioTarea;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.PermisoTareasUser;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.DataService;

import pruebadb.example.dj.com.pruebadb.pruebadb.db.UsuarioDao;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.TareaDao;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.RelacionUsuarioTareaDao;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.PermisoTareasUserDao;
import pruebadb.example.dj.com.pruebadb.pruebadb.db.DataServiceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig usuarioDaoConfig;
    private final DaoConfig tareaDaoConfig;
    private final DaoConfig relacionUsuarioTareaDaoConfig;
    private final DaoConfig permisoTareasUserDaoConfig;
    private final DaoConfig dataServiceDaoConfig;

    private final UsuarioDao usuarioDao;
    private final TareaDao tareaDao;
    private final RelacionUsuarioTareaDao relacionUsuarioTareaDao;
    private final PermisoTareasUserDao permisoTareasUserDao;
    private final DataServiceDao dataServiceDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        usuarioDaoConfig = daoConfigMap.get(UsuarioDao.class).clone();
        usuarioDaoConfig.initIdentityScope(type);

        tareaDaoConfig = daoConfigMap.get(TareaDao.class).clone();
        tareaDaoConfig.initIdentityScope(type);

        relacionUsuarioTareaDaoConfig = daoConfigMap.get(RelacionUsuarioTareaDao.class).clone();
        relacionUsuarioTareaDaoConfig.initIdentityScope(type);

        permisoTareasUserDaoConfig = daoConfigMap.get(PermisoTareasUserDao.class).clone();
        permisoTareasUserDaoConfig.initIdentityScope(type);

        dataServiceDaoConfig = daoConfigMap.get(DataServiceDao.class).clone();
        dataServiceDaoConfig.initIdentityScope(type);

        usuarioDao = new UsuarioDao(usuarioDaoConfig, this);
        tareaDao = new TareaDao(tareaDaoConfig, this);
        relacionUsuarioTareaDao = new RelacionUsuarioTareaDao(relacionUsuarioTareaDaoConfig, this);
        permisoTareasUserDao = new PermisoTareasUserDao(permisoTareasUserDaoConfig, this);
        dataServiceDao = new DataServiceDao(dataServiceDaoConfig, this);

        registerDao(Usuario.class, usuarioDao);
        registerDao(Tarea.class, tareaDao);
        registerDao(RelacionUsuarioTarea.class, relacionUsuarioTareaDao);
        registerDao(PermisoTareasUser.class, permisoTareasUserDao);
        registerDao(DataService.class, dataServiceDao);
    }
    
    public void clear() {
        usuarioDaoConfig.clearIdentityScope();
        tareaDaoConfig.clearIdentityScope();
        relacionUsuarioTareaDaoConfig.clearIdentityScope();
        permisoTareasUserDaoConfig.clearIdentityScope();
        dataServiceDaoConfig.clearIdentityScope();
    }

    public UsuarioDao getUsuarioDao() {
        return usuarioDao;
    }

    public TareaDao getTareaDao() {
        return tareaDao;
    }

    public RelacionUsuarioTareaDao getRelacionUsuarioTareaDao() {
        return relacionUsuarioTareaDao;
    }

    public PermisoTareasUserDao getPermisoTareasUserDao() {
        return permisoTareasUserDao;
    }

    public DataServiceDao getDataServiceDao() {
        return dataServiceDao;
    }

}
